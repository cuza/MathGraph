function IrPaso2() {
    var o = $("#texto-funcionnormal").val();
    $(".funcion-paso-x").html(o), $.ajax({type: "POST", url: "index.php", dataType: "json", data: {action: "procesar-paso-1", funcion: o}, success: function (o) {
        dominio = o.dominio, $("#funcion-paso-2-coment").html(o.coment_dom), y = o.y, x = o.x, $("#y-paso-3-coment").html(o.coment_y), $("#x-paso-3-coment").html(o.coment_x), "no" == x[0] && ($("#paso-3-x-0").parent().html("Este valor se obtiene mediante métodos numéricos"), $(".x-paso-x").html("Este valor se obtiene mediante métodos numéricos"));
        var a = "";
        $.each(dominio, function (o, i) {
            a += "<b>" + i + " </b> &nbsp&nbsp"
        }), $(".dominio-paso-x").html(a);
        var i = "";
        $.each(x, function (o, a) {
            i += "<b>" + a + " </b> &nbsp&nbsp"
        }), $(".x-paso-x").html(i);
        var t = "<b>" + y + " </b>";
        "no" != y ? $(".y-paso-x").html(t) : ($(".y-paso-x").html("Este valor no esta definido."), $("#paso-3-y").parent().prepend("Este valor no está definido."), $("#paso-3-y").remove()), signos = o.signos, $("#paso-4-coment").html(o.coment_signos);
        var n = "", e = "";
        if ("n" != signos[0] && "o" != signos[1] ? ($.each(signos, function (o, a) {
            var i = a.split(" ")[0];
            n += "<b id='paso-4-signo-b-" + o + "'>" + i + " = </b>" + "<select class='signo-dominio' id='paso-4-signo-" + o + "' onchange='ProbarSigno($(this))'>" + "<option> ... </option>" + "<option> + </option>" + "<option> - </option>" + "</select> <br>", e += "<b>" + a + " </b> &nbsp&nbsp&nbsp"
        }), $(".signos-items").html(n), $(".signos-paso-x").html(e)) : ($("#paso-4-signo-b-0").parent().html("Este valor se obtiene mediante métodos numéricos"), $(".signos-items").html("Este valor se obtiene mediante métodos numéricos"), $(".signos-paso-x").html("Este valor se obtiene mediante métodos numéricos")), asintotaDerecha = o.asintotaDerecha, asintotaIzquierda = o.asintotaIzquierda, asintotasVertical = o.asintotasVertical, asintotaOblicua = o.asintotaOblicua, ptosasintotaOblicua = o.ptosasintotaOblicua, "no" == asintotaDerecha) {
            $("#asintota-derecha").parent().prepend("No Tiene."), $("#asintota-derecha").remove();
            var r = "<br><br><b>Asíntota Horizontal Derecha: </b> No Tiene.";
            $(".asintota-paso-x").append(r)
        } else {
            var r = "<br><br><b>Asíntota Horizontal Derecha: </b>" + asintotaDerecha;
            $(".asintota-paso-x").append(r)
        }
        if ("no" == asintotaIzquierda) {
            $("#asintota-izquierda").parent().prepend("No Tiene."), $("#asintota-izquierda").remove();
            var r = "<br><b>Asíntota Horizontal Izquierda: </b> No Tiene.";
            $(".asintota-paso-x").append(r)
        } else {
            var r = "<br><b>Asíntota Horizontal Izquierda: </b>" + asintotaIzquierda;
            $(".asintota-paso-x").append(r)
        }
        if (0 == asintotasVertical.length) {
            $("#asintota-vertical-0").parent().prepend("No Tiene."), $("#asintota-vertical-0").remove();
            var r = "<br><b>Asíntota Vertical: </b> No Tiene.";
            $(".asintota-paso-x").append(r)
        } else {
            var r = "<br><b>Asíntota Vertical: </b>";
            $.each(asintotasVertical, function (o, a) {
                var i = " ";
                0 != o && (i = ", "), r += i + a
            }), $(".asintota-paso-x").append(r)
        }
        if ("no" == asintotaOblicua) {
            $("#asintota-oblicua").parent().prepend("No Tiene."), $("#asintota-oblicua").remove();
            var r = "<br><b>Asíntota Oblicua: </b> No Tiene.";
            $(".asintota-paso-x").append(r)
        } else {
            var r = "<br><b>Asíntota Oblicua: </b>" + asintotaOblicua;
            $(".asintota-paso-x").append(r)
        }
        if (extremos = o.extremos, 0 == extremos.length) {
            $("#extremos-max-min-0").parent().html("No Tiene.");
            var r = "<b>  No Tiene.</b>";
            $(".extremos-paso-x").append(r)
        } else {
            var r = "";
            $.each(extremos, function (o, a) {
                var i = " ";
                0 != o && (i = ",    "), r += i + a
            }), $(".extremos-paso-x").append(r)
        }
        if (inflexion = o.inflexion, 0 == inflexion.length) {
            $("#inflexion-x-0").parent().html("No Tiene.");
            var r = "<b>  No Tiene.</b>";
            $(".inflexion-paso-x").append(r)
        } else {
            var r = "";
            $.each(inflexion, function (o, a) {
                var i = " ";
                0 != o && (i = ", "), r += i + a
            }), $(".inflexion-paso-x").append(r)
        }
        monotonia = o.monotonia;
        var s = "", l = "";
        "no" != monotonia ? ($.each(monotonia, function (o, a) {
            var i = a.split(" ")[0];
            s += "<b id='paso-7-monotonia-b-" + o + "'>" + i + " = </b>" + "<select class='monotonia-dominio' id='paso-7-monotonia-" + o + "' onchange='ProbarMonotonia($(this))'>" + "<option> ... </option>" + "<option> Creciente </option>" + "<option> Decreciente </option>" + "</select> <br>", l += "<b>" + a + " </b> &nbsp&nbsp&nbsp"
        }), $(".monotonia-items").html(s), $(".monotonia-paso-x").html(l)) : ($("#paso-7-monotonia-b-0").parent().html("La monotonía es constante."), $(".monotonia-items").html("La monotonía es constante."), $(".monotonia-paso-x").html("La monotonía es constante.")), concavidadConvexidad = o.concavidadConvexidad;
        var s = "", l = "";
        concavidadConvexidad.length > 0 ? ($.each(concavidadConvexidad, function (o, a) {
            var i = a.split(" ")[0];
            s += "<b id='paso-9-concavidadConvexidad-b-" + o + "'>" + i + " = </b>" + "<select class='concavidadConvexidad-dominio' id='paso-9-concavidadConvexidad-" + o + "' onchange='ProbarConcavidadConvexidad($(this))'>" + "<option> ... </option>" + "<option> Convexa </option>" + "<option> Cóncava </option>" + "</select> <br>", l += "<b>" + a + " </b> &nbsp&nbsp&nbsp"
        }), $(".concavidadConvexidad-items").html(s), $(".concavidadConvexidad-paso-x").html(l)) : ($("#paso-9-monotonia-b-0").parent().html("La función no es ni cóncava ni convexa."), $(".concavidadConvexidad-items").html("La función no es ni cóncava ni convexa."), $(".concavidadConvexidad-paso-x").html("La función no es ni cóncava ni convexa.")), funcionsimple = o.funcion
    }})
}
function IrPaso3() {
    var o = !0;
    inddomok.length != dominio.length && (o = !1), $.each(inddomok, function (a, i) {
        i || (o = !1)
    }), o || alert("Inserte todos los valores para poder continuar")
}
function IrPaso4() {
    var o = !0;
    inddomok.length != dominio.length && (o = !1), $.each(inddomok, function (a, i) {
        i || (o = !1)
    }), o || alert("Inserte todos los valores para poder continuar")
}
function IrPaso5() {
}
function IrPaso6() {
}
function IrPaso7() {
}
function IrPaso8() {
}
function IrPaso9() {
}
function IrPaso10() {
    var o = $("#escx1").val(), a = $("#escx2").val(), i = "<div id='wait'> <img src='view/images/large-loading.gif'> </div>";
    $(".graph").append(i), $.ajax({type: "POST", url: "index.php", dataType: "json", data: {action: "procesar-paso-2", funcion: funcionsimple, x1: o, x2: a, asintotaOblicua: asintotaOblicua}, success: function (o) {
        ptosasintotaOblicua = o.ptosasintotaOblicua, grafico = o.grafico, $("#wait").remove(), Graficar(grafico)
    }})
}
function AddDominio(o) {
    var a = o.attr("id").split("-")[2];
    if (o.valid() && a == iddom)if (DominioOk(a)) {
        iddom++;
        var i = "<div class='dominio-items'>  <b>x</b>                 <select class='signo-dominio' id='signo-dominio-" + iddom + "'>    " + "<option> < </option>                " + "<option> > </option>          " + "<option> ≥ </option>          " + "<option> ≤ </option>          " + "<option> ≠ </option>        " + "<option> = </option>         " + "<option> Є </option>         " + "</select>                     " + "<input type='text' name='dominio' id='texto-dominio-" + iddom + "' class='texto-dominio required' onchange='AddDominio($(this))'  />    " + "</div>", t = !0;
        $.each(inddomok, function (o, a) {
            a && inddomok.length == dominio.length || (t = !1)
        }), t || o.parent().after(i), o.parent().remove()
    } else o.val(""), MarcarError(2), alert("Dominio Incorrecto.")
}
function DominioOk(o) {
    var a = !1, i = "x " + $("#signo-dominio-" + o).val().trim() + " " + $("#texto-dominio-" + o).val().toUpperCase();
    return $.each(dominio, function (t, n) {
        if (i == n && !inddomok[t]) {
            a = !0, inddomok[t] = !0;
            var e = "<b> x " + $("#signo-dominio-" + o).val() + " " + $("#texto-dominio-" + o).val().toUpperCase() + " </b><br>";
            $("#signo-dominio-" + o).parent().before(e)
        }
    }), a
}
function showTooltip(o, a, i) {
    $('<div id="tooltip">' + i + "</div>").css({position: "absolute", display: "none", top: a + 5, left: o + 5, padding: "4px", color: "#ffffff", "background-color": "#000", opacity: .75, "border-radius": "3px"}).appendTo("body").fadeIn(200)
}
function GetColorsRandom(o) {
    var a = ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"], t = [], n = 0;
    for (i = 0; t.length < o;) {
        var e;
        e = a.length == i ? $.color.make(100, 100, 100) : $.color.parse(a[i]);
        var r = 1 == n % 2 ? -1 : 1;
        e.scale("rgb", 1 + .2 * r * Math.ceil(n / 2)), t.push(e), ++i, i >= a.length && (i = 0, ++n)
    }
    return t
}
function Invertir(o) {
    for (var a = "", i = o.length - 1; i >= 0; i--)a += o[i];
    return a
}
function ProbarX(o) {
    var a = o.attr("id").split("-")[3];
    if (o.valid() && a == idx)if (isNaN(parseInt(o.val())) && "-INF" != o.val() && "INF" != o.val())o.val(""); else if (XOk(a)) {
        idx++;
        var i = "<div class='x-items'>  <b>x = </b>                 <input type='text' id='paso-3-x-" + idx + "' class='paso-3-x required' onchange='ProbarX($(this))'  />    " + "</div>", t = !0;
        $.each(indxok, function (o, a) {
            a && indxok.length == x.length || (t = !1)
        }), t || o.parent().after(i), o.parent().remove(), xpt.push([parseInt(o.val()), 0])
    } else MarcarError(3), alert("X Incorrecta."), o.val("");
    PintarXY()
}
function XOk(o) {
    var a = !1, i = "x = " + $("#paso-3-x-" + o).val();
    return $.each(x, function (t, n) {
        if (i == n && !indxok[t]) {
            a = !0, indxok[t] = !0;
            var e = "<b> x = " + $("#paso-3-x-" + o).val() + " </b><br>";
            $("#paso-3-x-" + o).parent().before(e)
        }
    }), a
}
function ProbarY(o) {
    if (o.valid())if (isNaN(parseInt(o.val())) && "-INF" != o.val() && "INF" != o.val())o.val(""); else if (y == o.val()) {
        var a = "<b>" + y + " </b>";
        o.parent().prepend(a), o.remove(), ypt.push([0, y])
    } else MarcarError(3), alert("Y Incorrecta."), o.val("");
    PintarXY()
}
function PintarXY() {
    for (var o = [], a = 0; a < xpt.length; a++)o.push([xpt[a][0], 0]);
    ypt[0] && o.push([0, ypt[0][1]]), draw([
        {label: "", data: o, lines: {fillColor: "#f2f7f9", show: !1}, points: {fillColor: "#88bbc8"}}
    ])
}
function ProbarSigno(o) {
    var a = o.attr("id").split("-")[3];
    o.valid() && (SignoOk(a, o) ? ($("#paso-4-signo-b-" + a).html($("#paso-4-signo-b-" + a).html() + o.val()), o.remove()) : (MarcarError(4), alert("Signo Incorrecto.")))
}
function SignoOk(o, a) {
    var i = !1, t = signos[o].split(" ")[1];
    if (t == a.val())var i = !0;
    return i
}
function ProbarAsintotaIzquierda(o) {
    if (o.valid())if (isNaN(parseInt(o.val())))o.val(""); else if (asintotaIzquierda == o.val()) {
        var a = "<b>" + asintotaIzquierda + " </b>";
        o.parent().prepend(a), o.remove()
    } else MarcarError(5), alert("Asintota Incorrecta."), o.val("");
    PintarAsintotas()
}
function ProbarAsintotaDerecha(o) {
    if (o.valid())if (isNaN(parseInt(o.val())))o.val(""); else if (asintotaDerecha == o.val()) {
        var a = "<b>" + asintotaDerecha + " </b>";
        o.parent().prepend(a), o.remove()
    } else MarcarError(5), alert("Asintota Incorrecta."), o.val("");
    PintarAsintotas()
}
function ProbarAsintotaVertical(o) {
    var a = o.attr("id").split("-")[2];
    if (o.valid() && a == idasintotavertical)if (isNaN(parseInt(o.val())))o.val(""); else if (AsintotaVerticalOk(a)) {
        idasintotavertical++;
        var i = "<div class='asintotas'>  <input type='text' id='asintota-vertical-" + idasintotavertical + "' class='required' onchange='ProbarAsintotaVertical($(this))'  />    " + "</div>", t = !0;
        $.each(indasintotaverticalok, function (o, a) {
            a && indasintotaverticalok.length == asintotasVertical.length || (t = !1)
        }), t || o.parent().after(i), o.parent().remove()
    } else MarcarError(5), alert("Asintota Vertical Incorrecta."), o.val("");
    PintarAsintotas()
}
function AsintotaVerticalOk(o) {
    var a = !1, i = $("#asintota-vertical-" + o).val();
    return $.each(asintotasVertical, function (t, n) {
        if (i == n && !indasintotaverticalok[t]) {
            a = !0, indasintotaverticalok[t] = !0;
            var e = "<b>" + $("#asintota-vertical-" + o).val() + " </b><br>";
            $("#asintota-vertical-" + o).parent().before(e)
        }
    }), a
}
function ProbarAsintotaOblicua(o) {
    if (o.valid())if (asintotaOblicua == o.val()) {
        var a = "<b>" + asintotaOblicua + " </b>";
        o.parent().prepend(a), o.remove()
    } else MarcarError(5), alert("Asintota Incorrecta."), o.val("");
    PintarAsintotas()
}
function ProbarExtremo(o) {
    var a = o.attr("id").split("-")[3];
    if ($("#extremos-x-" + a).valid() && $("#extremos-y-" + a).valid() && a == idextremo)if (isNaN(parseFloat($("#extremos-x-" + a).val())) || isNaN(parseFloat($("#extremos-y-" + a).val())))o.val(""), $("#extremos-x-" + a).val(""), $("#extremos-y-" + a).val(""); else if (ExtremoOk(a)) {
        idextremo++;
        var i = "<div class='extremos'>  <br><br><b>x</b><input type='text' id='extremos-x-" + idextremo + "' class='required' />" + "<b>y</b><input type='text' id='extremos-y-" + idextremo + "' class='required' />" + "<select class='extremos-max-min' id='extremos-max-min-" + idextremo + "' onchange='ProbarExtremo($(this))'>" + "<option> ... </option>" + "<option> Máximo </option>" + "<option> Mínimo </option>" + "</select>" + "</div>", t = !0;
        $.each(idextremook, function (o, a) {
            a && idextremook.length == extremos.length || (t = !1)
        }), t || o.parent().after(i), o.parent().remove()
    } else MarcarError(6), alert("Extremo Incorrecto."), o.val(""), $("#extremos-x-" + a).val(""), $("#extremos-y-" + a).val("");
    PintarExtremos()
}
function ExtremoOk(o) {
    var a = !1, i = parseFloat($("#extremos-x-" + o).val()), t = parseFloat($("#extremos-y-" + o).val()), n = $("#extremos-max-min-" + o).val();
    return $.each(extremos, function (e, r) {
        var s = r.split(" "), l = s[1];
        s = s[0].split(",");
        var c = parseFloat(s[0]), p = parseFloat(s[1]);
        if (n == l && i == c && t == p && !idextremook[e]) {
            a = !0, idextremook[e] = !0;
            var d = "<br><br><b>" + i + "," + t + " " + n + "</b>";
            $("#extremos-max-min-" + o).parent().before(d)
        }
    }), a
}
function ProbarInflexion(o) {
    var a = o.attr("id").split("-")[2];
    if ($("#inflexion-x-" + a).valid() && $("#inflexion-y-" + a).valid() && a == idinflexion)if (isNaN(parseFloat($("#inflexion-x-" + a).val())) || isNaN(parseFloat($("#inflexion-y-" + a).val())))o.val(""), $("#inflexion-x-" + a).val(""), $("#inflexion-y-" + a).val(""); else if (InflexionOk(a)) {
        idinflexion++;
        var i = "<div class='extremos'>  <br><br><b>x</b><input type='text' id='inflexion-x-" + idinflexion + "' class='required' onchange='ProbarInflexion($(this))' />" + "<b>y</b><input type='text' id='inflexion-y-" + idinflexion + "' class='required' onchange='ProbarInflexion($(this))' />" + "</div>", t = !0;
        $.each(idinflexook, function (o, a) {
            a && idinflexook.length == inflexion.length || (t = !1)
        }), t || o.parent().after(i), o.parent().remove()
    } else MarcarError(8), alert("Punto de Inflexión Incorrecto."), o.val(""), $("#inflexion-x-" + a).val(""), $("#inflexion-y-" + a).val("");
    PintarInflexion()
}
function InflexionOk(o) {
    var a = !1, i = parseFloat($("#inflexion-x-" + o).val()), t = parseFloat($("#inflexion-y-" + o).val());
    return $.each(inflexion, function (n, e) {
        var r = e.split(","), s = parseFloat(r[0]), l = parseFloat(r[1]);
        if (i == s && t == l && !idinflexook[n]) {
            a = !0, idinflexook[n] = !0;
            var c = "<br><br><b>" + i + "," + t + "</b>";
            $("#inflexion-x-" + o).parent().before(c)
        }
    }), a
}
function ProbarMonotonia(o) {
    var a = o.attr("id").split("-")[3];
    o.valid() && (MonotoniaOk(a, o) ? ($("#paso-7-monotonia-b-" + a).html($("#paso-7-monotonia-b-" + a).html() + o.val()), o.remove()) : (MarcarError(7), alert("Monotonia Incorrecta.")))
}
function MonotoniaOk(o, a) {
    var i = !1, t = monotonia[o].split(" ")[1];
    if (t == a.val())var i = !0;
    return i
}
function ProbarConcavidadConvexidad(o) {
    var a = o.attr("id").split("-")[3];
    o.valid() && (ConcavidadConvexidadOk(a, o) ? ($("#paso-9-concavidadConvexidad-b-" + a).html($("#paso-9-concavidadConvexidad-b-" + a).html() + o.val()), o.remove()) : (MarcarError(9), alert("Incorrecto.")))
}
function ConcavidadConvexidadOk(o, a) {
    var i = !1, t = concavidadConvexidad[o].split(" ")[1];
    if (t == a.val())var i = !0;
    return i
}
function DevAsintotas() {
    for (var o = [], a = [], i = 0; i < xpt.length; i++)a.push([xpt[i][0], 0]);
    ypt[0] && a.push([0, ypt[0][1]]), o.push({label: "", data: a, lines: {show: !1}, points: {fillColor: "#edc240"}});
    var t = -5, n = 6, e = parseFloat($("#escx1").val()), r = parseFloat($("#escx2").val());
    isNaN(e) || (t = e), isNaN(r) || (n = r);
    var s = [];
    if (void 0 == $("#asintota-izquierda").val())for (var i = t; 0 >= i; i += .5)s.push([i, asintotaIzquierda]);
    var l = [];
    if (void 0 == $("#asintota-derecha").val())for (var i = 0; n > i; i += .5)l.push([i, asintotaDerecha]);
    o.push({label: "", data: s, points: {fillColor: "#ffffff", lineWidth: 1, show: !1}}), o.push({label: "", data: l, points: {fillColor: "#ffffff", lineWidth: 1, show: !1}});
    var c = -5, p = 6;
    if (0 != grafico.length) {
        c = 0, p = 0;
        for (var i = 0; i < grafico.length; i++)for (var d = 0; d < grafico[i].length; d++)grafico[i][d][1] < c && (c = grafico[i][d][1]), grafico[i][d][1] > p && (p = grafico[i][d][1])
    }
    for (var d = 0; d < asintotasVertical.length; d++) {
        var v = [];
        if (indasintotaverticalok[d]) {
            for (var i = c; p > i; i += .5)v.push([asintotasVertical[d], i]);
            o.push({label: "", data: v, points: {fillColor: "#ffffff", lineWidth: 1, show: !1}})
        }
    }
    var f = [];
    if (void 0 == $("#asintota-oblicua").val())for (var i = 0; i < ptosasintotaOblicua.length; i++)f.push([ptosasintotaOblicua[i][0], ptosasintotaOblicua[i][1]]);
    return o.push({label: "", data: f, points: {fillColor: "#ffffff", lineWidth: 1, show: !1}}), o
}
function PintarAsintotas() {
    var o = DevAsintotas();
    options.series.lines.show = !0, options.series.points.lineWidth = 3;
    for (var a = [], i = 0; i < o.length; i++)a.push("#edc240");
    options.colors = a, draw(o)
}
function DevExtremos() {
    var o = DevAsintotas(), a = [];
    return $.each(extremos, function (o, i) {
        if (idextremook[o]) {
            var t = i.split(" ");
            t = t[0].split(",");
            var n = parseFloat(t[0]), e = parseFloat(t[1]);
            a.push([n, e])
        }
    }), o.push({label: "", data: a, lines: {show: !1}, points: {fillColor: "#edc240", show: !0}}), o
}
function PintarExtremos() {
    var o = DevExtremos();
    options.series.lines.show = !0, options.series.points.lineWidth = 3;
    for (var a = [], i = 0; i < o.length; i++)a.push("#edc240");
    options.colors = a, draw(o)
}
function DevInflexion() {
    var o = DevExtremos(), a = [];
    return $.each(inflexion, function (o, i) {
        if (idinflexook[o]) {
            var t = i.split(","), n = parseFloat(t[0]), e = parseFloat(t[1]);
            a.push([n, e])
        }
    }), o.push({label: "", data: a, lines: {show: !1}, points: {fillColor: "#edc240", show: !0}}), o
}
function PintarInflexion() {
    var o = DevInflexion();
    options.series.lines.show = !0, options.series.points.lineWidth = 3;
    for (var a = [], i = 0; i < o.length; i++)a.push("#edc240");
    options.colors = a, draw(o)
}
function Graficar(o) {
    var a = DevInflexion();
    options.series.lines.show = !0, options.series.points.show = !0;
    for (var i = funcionsimple, t = 0; t < o.length; t++) {
        var n = [];
        t > 0 && (i = "");
        for (var e = 0; e < o[t].length; e++)n.push([o[t][e][0], o[t][e][1]]);
        a.push({label: i, data: n, color: "#444444", points: {fillColor: "#ffffff", show: !1}})
    }
    draw(a)
}
function draw(o) {
    for (var a = 9999999, i = -9999999, t = 9999999, n = -9999999, e = [], r = [
        {showMarker: !1, color: "#999999"},
        {showMarker: !1, color: "#999999"}
    ], s = 0; s < o.length; s++) {
        e[s] = [], void 0 == o[s].points.show && (o[s].points.show = !0), r[s + 2] = {showMarker: o[s].points.show, showLine: !o[s].points.show, color: "#555555"};
        for (var l = 0; l < o[s].data.length; l++)e[s][l] = o[s].data[l], o[s].data[l][0] > i && (i = o[s].data[l][0]), o[s].data[l][1] > n && (n = o[s].data[l][1]), o[s].data[l][0] < a && (a = o[s].data[l][0]), o[s].data[l][1] < t && (t = o[s].data[l][1])
    }
    a == i && (a -= 1, i += 1), t == n && (t -= 1, n += 1), options.xaxis.min = a, options.xaxis.max = i, options.yaxis.min = t, options.yaxis.max = n, o.push({data: [
        [a, 0],
        [i, 0]
    ], color: "#999999", points: {show: !1}}), o.push({data: [
        [0, t],
        [0, n]
    ], color: "#999999", points: {show: !1}}), plot1 = $.plot($(".simple-chart"), o, options);
    for (var s = e.length + 1; s >= 2; s--)e[s] = e[s - 2];
    e[0] = [
        [a, 0],
        [i, 0]
    ], e[1] = [
        [0, t],
        [0, n]
    ], plot2 = $.jqplot("chart1", e, {series: r, axes: {xaxis: {min: a, max: i}, yaxis: {min: t, max: n}}, highlighter: {show: !0, sizeAdjust: 7.5}, cursor: {show: !0, zoom: !0, showTooltip: !0}});
    var c = '<button value="reset" type="button" onclick="plot2.resetZoom();">Cancelar Zoom</button>';
    $(".reset-button").html(c)
}
var chartColours = GetColorsRandom(7), options = {grid: {show: !0, aboveData: !0, color: "#3f3f3f", labelMargin: 5, axisMargin: 0, borderWidth: 0, borderColor: null, minBorderMargin: 5, clickable: !0, hoverable: !0, autoHighlight: !0, mouseActiveRadius: 20}, series: {grow: {active: !0}, lines: {show: !0, fill: !1, lineWidth: 2, steps: !1}, points: {show: !0, radius: 4, symbol: "circle", fill: !0, borderColor: "#fff"}}, xaxis: {show: !0}, yaxis: {show: !0}, legend: {position: "se"}, shadowSize: 1, tooltip: !0, tooltipOpts: {content: "%s : %y.3", shifts: {x: -30, y: -50}}};
$(function () {
    $(".simple-chart").bind("plothover", function (o, a, i) {
        if (i) {
            if (previousPoint != i.dataIndex) {
                previousPoint = i.dataIndex, $("#tooltip").remove();
                var t = i.datapoint[0], n = i.datapoint[1];
                new Date(t), showTooltip(i.pageX, i.pageY, t + " , " + n)
            }
        } else $("#tooltip").remove(), previousPoint = null
    })
}), $(function () {
    var o = $("#da-ex-wizard-form").validate({onsubmit: !1});
    $("#da-ex-wizard-form").daWizard({onLeaveStep: function () {
        return o.form()
    }, onBeforeSubmit: function () {
        return o.form()
    }}), $(".boton-next").click(function () {
        "block" == $("#paso-1").css("display") && IrPaso2(), "block" == $("#paso-2").css("display") && IrPaso3(), "block" == $("#paso-3").css("display") && IrPaso4(), "block" == $("#paso-4").css("display") && IrPaso5(), "block" == $("#paso-5").css("display") && IrPaso6(), "block" == $("#paso-6").css("display") && IrPaso7(), "block" == $("#paso-7").css("display") && IrPaso8(), "block" == $("#paso-8").css("display") && IrPaso9(), "block" == $("#paso-9").css("display") && $("#da-ex-wizard-form").submit(function () {
            return!1
        })
    }), $(".boton-terminar").click(function () {
        IrPaso10()
    })
});
var dominio = [], y = [], x = [], signos = [], asintotaDerecha = "", asintotaIzquierda = "", asintotasVertical = [], asintotaOblicua = "", ptosasintotaOblicua = [], extremos = [], inflexion = [], monotonia = [], concavidadConvexidad = [], grafico = "", funcionsimple = "", xpt = [], ypt = [], iddom = 0, inddomok = [], operador = [];
operador.normal = "", operador.dialog = "", $(function () {
    function o(o) {
        var a = o.attr("item"), i = $("#texto-funcion" + a).val(), t = o.text();
        if ("" != i)if ("" != operador[a]) {
            var n = operador[a];
            "/" == n || "*" == n ? (i = Invertir(i), i = i.replace(n, ")"), i = Invertir(i), $("#texto-funcion" + a).val("(" + i + n + "(" + t + ")")) : $("#texto-funcion" + a).val(i + t)
        } else t = t.replace("x", i), $("#texto-funcion" + a).val(t); else $("#texto-funcion" + a).val(t);
        operador[a] = ""
    }

    function a(o) {
        var a = o.attr("item"), i = $("#texto-funcion" + a).val(), t = "";
        if ("" != i)if ("" != operador[a])$("#texto-funcion" + a).val(i); else {
            if ("-" != i[0])t = "-(x)", t = t.replace("x", i); else {
                for (var n = "", e = 2; e <= i.length - 2; e++)n += i[e];
                t = n
            }
            $("#texto-funcion" + a).val(t)
        } else $("#texto-funcion" + a).val(t)
    }

    function i(o) {
        var a = o.attr("item"), i = $("#texto-funcion" + a).val(), t = o.text();
        if ("" != i)if ("" != operador[a]) {
            if (t == i[i.length - 1]) {
                for (var n = "", e = 0; e <= i.length - 2; e++)n += i[e];
                i = n, operador[a] = ""
            } else i = Invertir(i), i = i.replace(operador[a], t), i = Invertir(i), operador[a] = t;
            $("#texto-funcion" + a).val(i)
        } else $("#texto-funcion" + a).val(i + t), operador[a] = t
    }

    function t(o) {
        var a = o.attr("item");
        if ("normal" == a) {
            if ("" != operador[a]) {
                var i = prompt("Escriba un numero");
                if (i = parseFloat(i), !isNaN(i) && i > 0) {
                    if ("" != operador[a]) {
                        var t = $("#texto-funcion" + a).val();
                        "/" == operador[a] ? (t = Invertir(t), t = t.replace(operador[a], ")"), t = Invertir(t), $("#texto-funcion" + a).val("(" + t + operador[a] + "(" + i + ")")) : $("#texto-funcion" + a).val(t + i), operador[a] = ""
                    }
                } else alert("Debe escribir un numero positivo.")
            }
        } else if ("" != $("#texto-funcion" + a).val()) {
            if ("" != operador[a]) {
                var i = prompt("Escriba un numero");
                if (i = parseFloat(i), !isNaN(i) && i > 0) {
                    var t = $("#texto-funcion" + a).val();
                    "/" == operador[a] ? (t = Invertir(t), t = t.replace(operador[a], ")"), t = Invertir(t), $("#texto-funcion" + a).val("(" + t + operador[a] + "(" + i + ")")) : $("#texto-funcion" + a).val(t + i), operador[a] = ""
                } else alert("Debe escribir un numero positivo.")
            }
        } else {
            var i = prompt("Escriba un numero");
            if (i = parseFloat(i), !isNaN(i) && i > 0) {
                var t = $("#texto-funcion" + a).val();
                "/" == operador[a] ? (t = Invertir(t), t = t.replace(operador[a], ")"), t = Invertir(t), $("#texto-funcion" + a).val("(" + t + operador[a] + "(" + i + ")")) : $("#texto-funcion" + a).val(t + i)
            } else alert("Debe escribir un numero positivo.")
        }
    }

    function n(o) {
        var a = o.attr("item"), i = $("#texto-funciondialog").val(), t = $("#texto-funcionnormal").val(), n = o.text();
        n = n.replace("y", "(" + i + ")"), "" != t ? "" != operador[a] ? "/" == operador.normal ? (t = Invertir(t), t = t.replace("/", ")"), t = Invertir(t), $("#texto-funcionnormal").val("(" + t + "/(" + n + ")")) : $("#texto-funcionnormal").val(t + n) : "(x)^y" == o.text() ? (n = n.replace("x", t), $("#texto-funcionnormal").val(n)) : (n = Invertir(n), t = Invertir(t), n = n.replace("x", t), n = Invertir(n), $("#texto-funcionnormal").val(n)) : $("#texto-funcionnormal").val(n), operador[a] = ""
    }

    $(".button-funcion").click(function () {
        o($(this))
    }), $(".button-signo").click(function () {
        a($(this))
    }), $(".button-operador").click(function () {
        i($(this))
    }), $(".button-numero").click(function () {
        t($(this))
    }), $(".button-potencia").click(function () {
        var o = $(this);
        $("#texto-funciondialog").val(""), $("#dialog-funcion").dialog({autoOpen: !1, title: "Escoja Función", modal: !0, width: "640", buttons: [
            {text: "Aceptar", click: function () {
                n(o), $(this).dialog("close")
            }},
            {text: "Cerrar", click: function () {
                $(this).dialog("close")
            }}
        ]}).dialog("open")
    }), $(".button-clear").click(function () {
        var o = $(this).attr("item");
        $("#texto-funcion" + o).val("")
    })
});
var idx = 0, indxok = [], idasintotavertical = 0, indasintotaverticalok = [], idextremo = 0, idextremook = [], idinflexion = 0, idinflexook = [];
$(function () {
    $(".info").mouseover(function (o) {
        var a = $(this).attr("coment");
        showTooltip(o.pageX + 10, o.pageY - 10, a)
    }), $(".info").mouseout(function () {
        $("#tooltip").remove()
    })
});