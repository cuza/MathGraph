!function (t) {
    var e = function (e, i) {
        this.$elem = t(e), this.options = i
    };
    e.prototype = {defaults: {element: "fieldset", labelElement: "legend", buttonContainerClass: "da-button-row", nextButtonClass: "da-button boton-next green", prevButtonClass: "da-button red left", submitButtonClass: "da-button boton-terminar blue", nextButtonLabel: "Siguiente", prevButtonLabel: "Anterior", submitButtonLabel: "Graficar", forwardOnly: !1, onLeaveStep: null, onShowStep: null, onBeforeSubmit: null}, init: function () {
        return this.config = t.extend({}, this.defaults, this.options), this.steps = this.$elem.children(this.config.element), this.$elem.addClass("da-wizard-form"), this.data = t.extend({}, this._buildNavigation(), this._buildButtons()), this.initSteps(), this
    }, initSteps: function () {
        this.steps.hide().first().show(), this.wizardNav.find(".da-wizard-progress").animate({width: Math.floor(100 / this.steps.size()).toString() + "%"}, "slow").end().find("ul").children("li").first().addClass("active"), this.data.activeStep = 0, this._processSteps()
    }, goTo: function (e) {
        if (e !== this.data.activeStep) {
            if (this.config.forwardOnly && e < this.data.activeStep)return;
            var i = this;
            if (this.config.onLeaveStep && t.isFunction(this.config.onLeaveStep) && !1 === this.config.onLeaveStep.apply(this, [this.data.activeStep, this.steps.eq(this.data.activeStep)]))return;
            this.steps.eq(this.data.activeStep).data("done", !0).fadeOut("fast", function () {
                i.steps.eq(e).fadeIn("fast"), i.wizardNav.find(".da-wizard-progress").animate({width: Math.floor(100 / i.steps.size() * (e + 1)).toString() + "%"}, "slow").end().find("ul").children("li").removeClass("active").eq(i.data.activeStep).addClass("done").end().eq(e).addClass("active"), i.data.activeStep = e, i._processSteps(), i.config.onShowStep && t.isFunction(i.config.onShowStep) && i.config.onShowStep.apply(i, [e, i.steps.eq(e)])
            })
        }
    }, goBackward: function () {
        this.data.activeStep > 0 && this.goTo(this.data.activeStep - 1)
    }, goForward: function () {
        this.data.activeStep < this.steps.size() - 1 && this.goTo(this.data.activeStep + 1)
    }, submitForm: function () {
        var e = !0;
        this.config.onBeforeSubmit && t.isFunction(this.config.onBeforeSubmit) && (e = this.config.onBeforeSubmit.apply(this, [])), !1 !== e && this.$elem.submit()
    }, _navigate: function (t) {
        this._isStepDone(t) && this.goTo(t)
    }, _isStepDone: function (t) {
        return"undefined" != typeof this.steps.eq(t).data("done")
    }, _buildNavigation: function () {
        var e = this, i = t("<ul></ul>"), n = t("<li></li>").css({width: Math.floor(100 / this.steps.size()).toString() + "%"}), a = t("<span></span>"), s = t('<a href="#"></a>');
        return this.steps.each(function (o, d) {
            val = t(e.config.labelElement, d), val.hide(), i.append(n.clone().append(s.clone().text(o + 1).bind("click", function (t) {
                e._navigate(o), t.preventDefault()
            })).append(a.clone().addClass("da-wizard-label").text(0 != val.length ? val.text() : "Step " + (o + 1).toString())))
        }), this.wizardNav = t("<div></div>").addClass("da-wizard-nav").append(i).append(a.clone().addClass("da-wizard-progress")).insertBefore(this.$elem), {activeStep: -1}
    }, _buildButtons: function () {
        var e = t(this.config.buttonContainer, this.$elem), i = this, n = t("<input />").attr("type", "button"), a = n.clone().val(this.config.prevButtonLabel).addClass(this.config.prevButtonClass).bind("click", function (t) {
            i.config.forwardOnly || i.goBackward(), t.preventDefault()
        }), s = n.clone().val(this.config.nextButtonLabel).addClass(this.config.nextButtonClass).bind("click", function (t) {
            i.goForward(), t.preventDefault()
        }), o = n.clone().val(this.config.submitButtonLabel).addClass(this.config.submitButtonClass).bind("click", function (t) {
            i.submitForm(), t.preventDefault()
        });
        return e.get(0) || (e = t("<div></div>").addClass(this.config.buttonContainerClass).appendTo(this.$elem)), i.config.forwardOnly || e.append(a), e.append(s).append(o), {nextButton: s, prevButton: a, submitButton: o}
    }, _processSteps: function () {
        this.data.prevButton.toggle(this.data.activeStep > 0 && !this.data.forwardOnly), this.data.nextButton.toggle(this.data.activeStep < this.steps.size() - 1), this.data.submitButton.toggle(this.data.activeStep >= this.steps.size() - 1)
    }}, e.defaults = e.prototype.defaults, t.fn.daWizard = function (t) {
        return this.each(function () {
            new e(this, t).init()
        })
    }
}(jQuery, window, document);